<?php

/**
 * Implements hook_authcache_request_exclude().
 */
function authcache_ajax_authcache_request_exclude() {
  module_load_install('authcache_ajax');

  $requirements = module_invoke('authcache_ajax', 'requirements', 'runtime');
  if (isset($requirements['authcache_ajax']) && isset($requirements['authcache_ajax']['severity']) && $requirements['authcache_ajax']['severity'] == REQUIREMENT_ERROR) {
    return $requirements['authcache_ajax']['description'];
  }

  if (authcache_ajax_is_authcache_ajax_request()) {
    return t('Authcache Ajax request');
  }
}

/**
 * Implements hook_authcache_request_properties().
 */
function authcache_ajax_authcache_request_properties() {
  return array(
    'ajax' => !empty($_COOKIE['has_js']),
  );
}

/**
 * Implements hook_authcache_request_properties_info().
 */
function authcache_ajax_authcache_request_properties_info() {
  global $base_url;

  return array(
    'ajax' => array(
      'name' => t('Browser supports AJAX'),
      'choices' => array(TRUE, FALSE),
    ),
  );
}

/**
 * Implements hook_authcache_expanded_properties_alter().
 *
 * The ajax-property-value is exactly the same as the js-property-value.
 * Therefore it is save to simply remove those key-intries where ajax!=js.
 */
function authcache_ajax_authcache_key_properties_info_alter(&$properties_info) {
  foreach ($properties_info as $key => $info) {
    if ($info['request']['js'] != $info['request']['ajax']) {
      unset($properties_info[$key]);
    }
  }
}

/**
 * Implements hook_page_build().
 *
 * Attach authcache AJAX JavaScript.
 */
function authcache_ajax_page_build(&$page) {
  // Force Ajax to use POST method instead of GET
  if (variable_get('authcache_post', FALSE)) {
    drupal_add_js(array('authcacheAjax' => array('post' => 1)), 'setting');
  }

  // Supply the browser-cache version which will
  $vers = authcache_ajax_browsercache_version();
  drupal_add_js(array('authcacheAjax' => array('vers' => $vers)), 'setting');
}

/**
 *
 */
function authcache_ajax_browsercache_invalidate() {
  authcache_ajax_browsercache_version(TRUE);
}

/**
 *
 */
function authcache_ajax_browsercache_version($invalidate = FALSE) {
  if ($invalidate) {
    drupal_static_reset(__FUNCTION__);
  }

  $version = &drupal_static(__FUNCTION__);

  if (!isset($version) || $invalidate) {
    $cache = cache_get('authcache:browsercache_version', 'cache_page');

    if (!$cache || $invalidate) {
      $version = dechex(REQUEST_TIME % 0xFFFFFF);

      cache_set('authcache:browsercache_version', $version, 'cache_page', CACHE_TEMPORARY);
    }
    else {
      $version = $cache->data;
    }
  }

  return $version;
}

/**
 * Implements hook_form_alter(),
 */
function authcache_ajax_form_alter(&$form, &$form_state, $form_id) {
  if (authcache_ajax_is_authcache_ajax_request()) {
    // Forms being rendered during Ajax phase.
    $form['#action'] = "";
  }
}

/**
 * Return the factory class for requests and commands.
 */
function authcache_ajax_get_handler_factory() {
  $factory = &drupal_static(__FUNCTION__);

  if (!isset($factory)) {
    $factoryclass = variable_get('authcache_ajax_factory', 'AuthcacheAjaxDefaultHandlerFactory');
    $factory = new $factoryclass();
  }

  return $factory;
}

/**
 * Add a request definition to the page.
 */
function authcache_ajax_add_request($name) {
  static $requests_added = array();

  if (isset($requests_added[$name])) {
    return;
  }

  $factory = authcache_ajax_get_handler_factory();
  $request_info = $factory->getRequestInfo();

  if (isset($request_info[$name])) {
    $settings = $request_info[$name];

    if (!empty($settings['q'])) {
      $settings['q'] = $_GET['q'];
    }

    drupal_add_js(array('authcacheAjax' => array('requests' => array(
      $name => $settings,
    ))), 'setting');

    drupal_add_js(drupal_get_path('module', 'authcache_ajax') . '/authcache_ajax.js');
  }

  $requests_added[$name] = $name;
}

/**
 * Add a command definition to the page.
 */
function authcache_ajax_add_command($name) {
  static $commands_added = array();

  if (isset($commands_added[$name])) {
    return;
  }

  $factory = authcache_ajax_get_handler_factory();
  $command_info = $factory->getCommandInfo();

  if (isset($command_info[$name])) {
    $command = $command_info[$name];

    if (!empty($command['request'])) {
      authcache_ajax_add_request($command['request']);
    }

    drupal_add_js(array('authcacheAjax' => array('commands' => array(
      $name => $command['request']
    ))), 'setting');

    drupal_add_js(drupal_get_path('module', 'authcache_ajax') . '/authcache_ajax.js');
  }

  $commands_added[$name] = $name;
}

/**
 * Returns true if this request is executing from authcache_ajax.inc
 */
function authcache_ajax_is_authcache_ajax_request() {
  return isset($_SERVER['HTTP_AUTHCACHE']);
}

/**
 * Implements hook_modules_enabled().
 */
function authcache_ajax_modules_enabled($modules) {
  $factory = authcache_ajax_get_handler_factory();
  $factory->rebuildInfo();
}

/**
 * Implements hook_modules_disabled().
 */
function authcache_ajax_modules_disabled($modules) {
  $factory = authcache_ajax_get_handler_factory();
  $factory->rebuildInfo();
}
